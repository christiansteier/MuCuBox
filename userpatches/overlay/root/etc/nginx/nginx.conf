user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
       worker_connections 4000;
       #multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        
        # server_tokens off;
        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        #
        
        # to boost I/O on HDD we can disable access logs
        access_log off;
        error_log /var/log/nginx/error.log crit;
        
        # copies data between one FD and other from within the kernel
        # faster then read() + write()
        sendfile on;
        
        # send headers in one peace, its better then sending them one by one 
        tcp_nopush on;
        
        # don't buffer data sent, good for small data bursts in real time
        tcp_nodelay on;
        
        types_hash_max_size 2048;

        ##
        # Gzip Settings
        ##
       
       # reduce the data that needs to be sent over network
       gzip on;
       # gzip_static on;
       gzip_min_length 10240;
       gzip_comp_level 1;
       gzip_vary on;
       gzip_disable msie6;
       gzip_proxied expired no-cache no-store private auth;
       gzip_types
          # text/html is always compressed by HttpGzipModule
          text/css
          text/javascript
          text/xml
          text/plain
          text/x-component
          application/javascript
          application/x-javascript
          application/json
          application/xml
          application/rss+xml
          application/atom+xml
          font/truetype
          font/opentype
          application/vnd.ms-fontobject
          image/svg+xml;
        
        # allow the server to close connection on non responding client, this will free up memory
        reset_timedout_connection on;
        
        # request timed out -- default 60
        client_body_timeout 10;
        
        # if client stop responding, free up memory -- default 60
        send_timeout 2;
        
        # server will close connection after this time -- default 75
        keepalive_timeout 30;
        
        # number of requests client can make over keep-alive -- for testing environment
        keepalive_requests 100000;
        
        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}
